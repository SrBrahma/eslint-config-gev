/**
 * File smartly and automatically generated by my scripts/makeTsExtensions.js
 *
 * Some Typescript rules extends the JS rules to also support TS syntax.
 * This disables the JS rules and have their values in the TS corresponding rules.
 */

module.exports = {
  rules: {
    ['brace-style']: 'off',
    ['@typescript-eslint/brace-style']: ['warn', '1tbs', { allowSingleLine: true }],

    ['comma-dangle']: 'off',
    ['@typescript-eslint/comma-dangle']: ['warn', 'always-multiline'],

    ['comma-spacing']: 'off',
    ['@typescript-eslint/comma-spacing']: ['warn'],

    ['default-param-last']: 'off',
    ['@typescript-eslint/default-param-last']: ['error'],

    ['keyword-spacing']: 'off',
    ['@typescript-eslint/keyword-spacing']: ['warn', { after: true, before: true }],

    ['lines-between-class-members']: 'off',
    ['@typescript-eslint/lines-between-class-members']: ['warn', 'always', { exceptAfterSingleLine: true }],

    ['no-dupe-class-members']: 'off',
    ['@typescript-eslint/no-dupe-class-members']: ['error'],

    ['no-empty-function']: 'off',
    ['@typescript-eslint/no-empty-function']: ['off'],

    ['no-extra-semi']: 'off',
    ['@typescript-eslint/no-extra-semi']: ['error'],

    ['no-loss-of-precision']: 'off',
    ['@typescript-eslint/no-loss-of-precision']: ['error'],

    ['no-redeclare']: 'off',
    ['@typescript-eslint/no-redeclare']: ['error'],

    ['no-throw-literal']: 'off',
    ['@typescript-eslint/no-throw-literal']: ['warn'],

    ['no-unused-vars']: 'off',
    ['@typescript-eslint/no-unused-vars']: ['warn', { ignoreRestSiblings: true }],

    ['object-curly-spacing']: 'off',
    ['@typescript-eslint/object-curly-spacing']: ['warn', 'always'],

    ['quotes']: 'off',
    ['@typescript-eslint/quotes']: ['warn', 'single', { allowTemplateLiterals: true, avoidEscape: true }],

    ['require-await']: 'off',
    ['@typescript-eslint/require-await']: ['warn'],

    ['semi']: 'off',
    ['@typescript-eslint/semi']: ['warn', 'always'],

    ['space-before-blocks']: 'off',
    ['@typescript-eslint/space-before-blocks']: ['warn'],

    ['space-before-function-paren']: 'off',
    ['@typescript-eslint/space-before-function-paren']: ['warn', { anonymous: 'always', named: 'never', asyncArrow: 'always' }],

    ['space-infix-ops']: 'off',
    ['@typescript-eslint/space-infix-ops']: ['warn', { int32Hint: true }],
  },
};
